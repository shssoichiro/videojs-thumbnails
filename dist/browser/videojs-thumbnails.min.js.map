{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/global/window.js","src/js/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","videojsThumbnails","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","win","videojs","ex","_typeof","ThumbnailHelpers","progressControl","el_","getElementsByClassName","style","display","_len","arguments","args","Array","_key","thumbnailClip","shift","Object","keys","map","singleThumbnail","property","hasOwnProperty","createThumbnails","thumbnailContent","pseudo","prop","getComputedStyle","currentStyle","width","parseFloat","clip","split","pageXOffset","x","y","pageYOffset","document","documentElement","scrollLeft","scrollTop","player","controlBar","addFakeActive","addClass","removeFakeActive","removeClass","on","wrap","createElement","className","thumbnailClips","thumbnailImg","src","time","id","arrow","thumbnailsHolder","timelineTime","thumbnailArrowDown","appendChild","left","right","onload","thumbnailWidth","naturalWidth","duration","el","pageMousePositionX","event","leftOffset","clientX","body","getBoundingClientRect","mouseLeftOffset","Math","floor","offsetLeft","innerHTML","seekBar","mouseTimeDisplay","innerText","pageMouseOffsetX","pageX","changedTouches","activeThumbnail","progresBarRightOffset","getVisibleWidth","halfWidth","leftValue","mouseTime","activeClip","clipNumber","max","getScrollOffset","progressBarPosition","progressBarRightOffset","getPageMousePositionX","findMouseLeftOffset","parseDisplayTime","getActiveThumbnail","updateThumbnailTime","updateThumbnailSrc","updateThumbnailStyle","keepThumbnailInsidePlayer","updateThumbnailLeftStyle","moveListener","hideThumbnail","parts","seconds","factor","pop","defaults","registerPlugin","plugin","prepareThumbnailsClips","videoTime","options","currentTime","currentIteration","thumbnailOffset","stepTime","thumbsPerImage","perImage","initialSpriteUrl","spriteUrl","replace","0","spriteNum","spriteURL","initializeThumbnails","thumbnailsClips","createThumbnailImg","createThumbnailTime","createThumbnailArrowDown","createThumbnaislHolder","mergeThumbnailElements","hidePlayerOnHoverTime","navigator","userAgent","toLowerCase","indexOf","supportAndroidEvents","centerThumbnailOverCursor","addThumbnailToPlayer","updateOnHover","updateOnHoverOut","onPlayerReady","thumbnails","_this","ready","mergeOptions","VERSION"],"mappings":"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","file":"/home/soichiro/repos/videojs-thumbnails/dist/browser/videojs-thumbnails.min.js","sourceRoot":"","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar videojs = _interopDefault(require('video.js'));\nvar global = require('global');\n\nclass ThumbnailHelpers {\n\n  static hidePlayerOnHoverTime(progressControl) {\n    const mouseTime = progressControl.el_.getElementsByClassName('vjs-mouse-display')[0];\n\n    mouseTime.style.display = 'none';\n  }\n\n  static createThumbnails(...args) {\n    const thumbnailClip = args.shift() || {};\n\n    Object.keys(args).map((i) => {\n      const singleThumbnail = args[i];\n\n      Object.keys(singleThumbnail).map((property) => {\n        if (singleThumbnail.hasOwnProperty(property)) {\n          if (typeof singleThumbnail[property] === 'object') {\n            thumbnailClip[property] = ThumbnailHelpers.createThumbnails(thumbnailClip[property],\n                                                singleThumbnail[property]);\n          } else {\n            thumbnailClip[property] = singleThumbnail[property];\n          }\n        }\n        return thumbnailClip;\n      });\n      return thumbnailClip;\n    });\n    return thumbnailClip;\n  }\n\n  static getComputedStyle(thumbnailContent, pseudo) {\n    return (prop) => {\n      if (global.window.getComputedStyle) {\n        return global.window.getComputedStyle(thumbnailContent, pseudo)[prop];\n      }\n      return thumbnailContent.currentStyle[prop];\n    };\n  }\n\n  static getVisibleWidth(thumbnailContent, width) {\n    if (width) {\n      return parseFloat(width);\n    }\n\n    let clip = ThumbnailHelpers.getComputedStyle(thumbnailContent)('clip');\n\n    if (clip !== 'auto' && clip !== 'inherit') {\n      clip = clip.split(/(?:\\(|\\))/)[1].split(/(?:,| )/);\n      if (clip.length === 4) {\n        return (parseFloat(clip[1]) - parseFloat(clip[3]));\n      }\n    }\n    return 0;\n  }\n\n  static getScrollOffset() {\n    if (global.window.pageXOffset) {\n      return {\n        x: global.window.pageXOffset,\n        y: global.window.pageYOffset\n      };\n    }\n    return {\n      x: global.document.documentElement.scrollLeft,\n      y: global.document.documentElement.scrollTop\n    };\n  }\n\n  static supportAndroidEvents(player) {\n    // Android doesn't support :active and :hover on non-anchor and non-button elements\n    // so, we need to fake the :active selector for thumbnails to show up.\n    const progressControl = player.controlBar.progressControl;\n\n    const addFakeActive = () => {\n      progressControl.addClass('fake-active');\n    };\n\n    const removeFakeActive = () => {\n      progressControl.removeClass('fake-active');\n    };\n\n    progressControl.on('touchstart', addFakeActive);\n    progressControl.on('touchend', removeFakeActive);\n    progressControl.on('touchcancel', removeFakeActive);\n  }\n\n  static createThumbnaislHolder() {\n    const wrap = global.document.createElement('div');\n\n    wrap.className = 'vjs-thumbnail-holder';\n    return wrap;\n  }\n\n  static createThumbnailImg(thumbnailClips) {\n    const thumbnailImg = global.document.createElement('img');\n\n    thumbnailImg.src = thumbnailClips['0'].src;\n    thumbnailImg.className = 'vjs-thumbnail-img';\n    return thumbnailImg;\n  }\n\n  static createThumbnailTime() {\n    const time = global.document.createElement('div');\n\n    time.className = 'vjs-thumbnail-time';\n    time.id = 'vjs-time';\n    return time;\n  }\n\n  static createThumbnailArrowDown() {\n    const arrow = global.document.createElement('div');\n\n    arrow.className = 'vjs-thumbnail-arrow';\n    arrow.id = 'vjs-arrow';\n    return arrow;\n  }\n\n  static mergeThumbnailElements(thumbnailsHolder,\n                                thumbnailImg,\n                                timelineTime,\n                                thumbnailArrowDown) {\n\n    thumbnailsHolder.appendChild(thumbnailImg);\n    thumbnailsHolder.appendChild(timelineTime);\n    thumbnailsHolder.appendChild(thumbnailArrowDown);\n    return thumbnailsHolder;\n  }\n\n  static centerThumbnailOverCursor(thumbnailImg) {\n    // center the thumbnail over the cursor if an offset wasn't provided\n    if (!thumbnailImg.style.left && !thumbnailImg.style.right) {\n      thumbnailImg.onload = () => {\n        const thumbnailWidth = { width: -(thumbnailImg.naturalWidth / 2) };\n\n        thumbnailImg.style.left = `${thumbnailWidth}px`;\n      };\n    }\n  }\n\n  static getVideoDuration(player) {\n    let duration = player.duration();\n\n    player.on('durationchange', () => {\n      duration = player.duration();\n    });\n    return duration;\n  }\n\n  static addThumbnailToPlayer(progressControl, thumbnailsHolder) {\n    progressControl.el().appendChild(thumbnailsHolder);\n  }\n\n  static findMouseLeftOffset(pageMousePositionX, progressControl, pageXOffset, event) {\n    // find the page offset of the mouse\n    let leftOffset = pageMousePositionX || (event.clientX +\n                     global.document.body.scrollLeft + global.document.documentElement.scrollLeft);\n\n    // subtract the page offset of the positioned offset parent\n    leftOffset -= progressControl.el().\n                  getBoundingClientRect().left + pageXOffset;\n    return leftOffset;\n  }\n\n  static getMouseVideoTime(mouseLeftOffset, progressControl, duration) {\n    return Math.floor((mouseLeftOffset - progressControl.el().offsetLeft) /\n           progressControl.width() * duration);\n  }\n\n  static updateThumbnailTime(timelineTime, progressControl) {\n    timelineTime.innerHTML = (progressControl.seekBar.mouseTimeDisplay.el_.innerText);\n  }\n\n  static getPageMousePositionX(event) {\n    let pageMouseOffsetX = event.pageX;\n\n    if (event.changedTouches) {\n      pageMouseOffsetX = event.changedTouches[0].pageX;\n    }\n    return pageMouseOffsetX;\n  }\n\n  static keepThumbnailInsidePlayer(thumbnailImg,\n                                   activeThumbnail,\n                                   thumbnailClips,\n                                   mouseLeftOffset,\n                                   progresBarRightOffset) {\n\n    const width = ThumbnailHelpers.getVisibleWidth(thumbnailImg, activeThumbnail.width ||\n                  thumbnailClips[0].width);\n\n    const halfWidth = width / 2;\n\n    // make sure that the thumbnail doesn't fall off the right side of\n    // the left side of the player\n    if ((mouseLeftOffset + halfWidth) > progresBarRightOffset) {\n      mouseLeftOffset -= (mouseLeftOffset + halfWidth) - progresBarRightOffset;\n    } else if (mouseLeftOffset < halfWidth) {\n      mouseLeftOffset = halfWidth;\n    }\n    return mouseLeftOffset;\n  }\n\n  static updateThumbnailLeftStyle(mouseLeftOffset, thumbnailsHolder) {\n    const leftValue = { mouseLeftOffset };\n\n    thumbnailsHolder.style.left = `${leftValue.mouseLeftOffset}px`;\n  }\n\n  static getActiveThumbnail(thumbnailClips, mouseTime) {\n    let activeClip = 0;\n\n    for (const clipNumber in thumbnailClips) {\n      if (mouseTime > clipNumber) {\n        activeClip = Math.max(activeClip, clipNumber);\n      }\n    }\n    return thumbnailClips[activeClip];\n  }\n\n  static updateThumbnailSrc(activeThumbnail, thumbnailImg) {\n    if (activeThumbnail.src && thumbnailImg.src !== activeThumbnail.src) {\n      thumbnailImg.src = activeThumbnail.src;\n    }\n  }\n\n  static updateThumbnailStyle(activeThumbnail, thumbnailImg) {\n    if (activeThumbnail.style && thumbnailImg.style !== activeThumbnail.style) {\n      ThumbnailHelpers.createThumbnails(thumbnailImg.style, activeThumbnail.style);\n    }\n  }\n\n  static moveListener(event,\n                      progressControl,\n                      thumbnailsHolder,\n                      thumbnailClips,\n                      timelineTime,\n                      thumbnailImg) {\n    const pageXOffset = ThumbnailHelpers.getScrollOffset().x;\n    const progressBarPosition = progressControl.el().\n                               getBoundingClientRect();\n\n    const progressBarRightOffset = (progressBarPosition.width ||\n                                   progressBarPosition.right) +\n                                   pageXOffset;\n\n    const pageMousePositionX = ThumbnailHelpers.getPageMousePositionX(event);\n\n    let mouseLeftOffset = ThumbnailHelpers.findMouseLeftOffset(pageMousePositionX,\n                                                               progressControl,\n                                                               pageXOffset,\n                                                               event);\n\n    const mouseTime = ThumbnailHelpers.parseDisplayTime(timelineTime.innerText);\n\n    const activeThumbnail = ThumbnailHelpers.getActiveThumbnail(thumbnailClips,\n                                                                mouseTime);\n\n    ThumbnailHelpers.updateThumbnailTime(timelineTime, progressControl);\n\n    ThumbnailHelpers.updateThumbnailSrc(activeThumbnail, thumbnailImg);\n\n    ThumbnailHelpers.updateThumbnailStyle(activeThumbnail, thumbnailImg);\n\n    mouseLeftOffset = ThumbnailHelpers.keepThumbnailInsidePlayer(thumbnailImg,\n                                                activeThumbnail,\n                                                thumbnailClips,\n                                                mouseLeftOffset,\n                                                progressBarRightOffset);\n\n    ThumbnailHelpers.updateThumbnailLeftStyle(mouseLeftOffset, thumbnailsHolder);\n  }\n\n  static updateOnHover(progressControl,\n                       thumbnailsHolder,\n                       thumbnailClips,\n                       timelineTime,\n                       thumbnailImg,\n                       player) {\n\n    // update the thumbnail while hovering\n    progressControl.on('mousemove', (event) => {\n      ThumbnailHelpers.moveListener(event,\n                                    progressControl,\n                                    thumbnailsHolder,\n                                    thumbnailClips,\n                                    timelineTime,\n                                    thumbnailImg,\n                                    player);\n    });\n    progressControl.on('touchmove', (event) => {\n      ThumbnailHelpers.moveListener(event,\n                                    progressControl,\n                                    thumbnailsHolder,\n                                    thumbnailClips,\n                                    timelineTime,\n                                    thumbnailImg);\n    });\n  }\n\n  static hideThumbnail(thumbnailsHolder) {\n    thumbnailsHolder.style.left = '-1000px';\n  }\n\n  static updateOnHoverOut(progressControl, thumbnailsHolder, player) {\n\n    // move the placeholder out of the way when not hovering\n    progressControl.on('mouseout', (event) => {\n      ThumbnailHelpers.hideThumbnail(thumbnailsHolder);\n    });\n    progressControl.on('touchcancel', (event) => {\n      ThumbnailHelpers.hideThumbnail(thumbnailsHolder);\n    });\n    progressControl.on('touchend', (event) => {\n      ThumbnailHelpers.hideThumbnail(thumbnailsHolder);\n    });\n    player.on('userinactive', (event) => {\n      ThumbnailHelpers.hideThumbnail(thumbnailsHolder);\n    });\n  }\n\n  static parseDisplayTime(time) {\n    const parts = time.split(':');\n    let seconds = 0;\n    let factor = 1;\n\n    while (true) {\n      if (parts.length === 0) {\n        break;\n      }\n\n      const part = parts.pop();\n\n      seconds += part * factor;\n      factor *= 60;\n    }\n    return seconds;\n  }\n}\n\n// Default options for the plugin.\nconst defaults = {};\n\n// Cross-compatibility for Video.js 5 and 6.\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n// const dom = videojs.dom || videojs;\n\n/**\n * Function to invoke when the player is ready.\n *\n * This is a great place for your plugin to initialize itself. When this\n * function is called, the player will have its DOM and child components\n * in place.\n *\n * @function onPlayerReady\n * @param    {Player} player\n *           A Video.js player.\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\n\nconst prepareThumbnailsClips = (videoTime, options) => {\n\n  let currentTime = 0;\n  let currentIteration = 0;\n  let thumbnailOffset = 0;\n  const stepTime = options.stepTime;\n  const thumbnailWidth = options.width;\n  const thumbsPerImage = options.perImage;\n  const initialSpriteUrl = options.spriteUrl.replace('%d', 1);\n  const thumbnailClips = {\n    0: {\n      src: initialSpriteUrl,\n      style: {\n        left: (thumbnailWidth / 2 * -1) + 'px',\n        width: (thumbsPerImage * thumbnailWidth) + 'px',\n        clip: 'rect(0,' + options.width + 'px,' + options.width + 'px, 0)'\n      }\n    }\n  };\n\n  while (currentTime <= videoTime) {\n    currentTime += stepTime;\n    thumbnailOffset = (++currentIteration % thumbsPerImage) * thumbnailWidth;\n    const spriteNum = Math.floor(currentTime / (stepTime * thumbsPerImage)) + 1;\n    const spriteURL = options.spriteUrl.replace('%d', spriteNum);\n\n    thumbnailClips[currentTime] = {\n      src: spriteURL,\n      style: {\n        left: ((thumbnailWidth / 2 + thumbnailOffset) * -1) + 'px',\n        clip: 'rect(0, ' + (thumbnailWidth + thumbnailOffset) + 'px,' +\n              options.width + 'px, ' + thumbnailOffset + 'px)'\n      }\n    };\n  }\n  return thumbnailClips;\n};\n\nconst initializeThumbnails = (player, options) => {\n  const thumbnailsClips = prepareThumbnailsClips(player.duration(), options);\n  const thumbnailClips = ThumbnailHelpers.createThumbnails({}, defaults, thumbnailsClips);\n  const progressControl = player.controlBar.progressControl;\n  const thumbnailImg = ThumbnailHelpers.createThumbnailImg(thumbnailClips);\n  const timelineTime = ThumbnailHelpers.createThumbnailTime();\n  const thumbnailArrowDown = ThumbnailHelpers.createThumbnailArrowDown();\n  let thumbnailsHolder = ThumbnailHelpers.createThumbnaislHolder();\n\n  thumbnailsHolder = ThumbnailHelpers.mergeThumbnailElements(thumbnailsHolder,\n                                                             thumbnailImg,\n                                                             timelineTime,\n                                                             thumbnailArrowDown);\n  ThumbnailHelpers.hidePlayerOnHoverTime(progressControl);\n\n  if (global.window.navigator.userAgent.toLowerCase().indexOf('android') !== -1) {\n    ThumbnailHelpers.supportAndroidEvents();\n  }\n\n  ThumbnailHelpers.createThumbnails(thumbnailImg.style,\n                                    thumbnailClips['0'].style);\n\n  ThumbnailHelpers.centerThumbnailOverCursor(thumbnailImg);\n\n  ThumbnailHelpers.addThumbnailToPlayer(progressControl,\n                                        thumbnailsHolder);\n\n  ThumbnailHelpers.updateOnHover(progressControl,\n                                  thumbnailsHolder,\n                                  thumbnailClips,\n                                  timelineTime,\n                                  thumbnailImg,\n                                  player);\n\n  ThumbnailHelpers.updateOnHoverOut(progressControl,\n                                     thumbnailsHolder,\n                                     player);\n};\n\nconst onPlayerReady = (player, options) => {\n  if (player.duration()) {\n    initializeThumbnails(player, options);\n  }\n  player.on('loadedmetadata', (() => {\n    initializeThumbnails(player, options);\n  }));\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @function thumbnails\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\nconst thumbnails = function(options) {\n  this.ready(() => {\n    onPlayerReady(this, videojs.mergeOptions(defaults, options));\n  });\n};\n\n// Register the plugin with video.js.\nregisterPlugin('thumbnails', thumbnails);\n\n// Include the version number.\nthumbnails.VERSION = '__VERSION__';\n\nmodule.exports = thumbnails;\n"]}